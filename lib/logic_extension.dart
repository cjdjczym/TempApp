/// 使用 "三次多项式 + 双线性插值算法" 进行两次插值处理
/// 1. 先将32 * 24的一维数组拆分为二维数组
/// 2. 然后将二维数组横向翻转
/// 3. 然后对每行、每列分别进行两次插值
///    每次插值：第1 ~ n-1个像素后面均插3个值，然后在一端插2个值，另一端插1个值，总共的像素变为原来4倍
List<List<double>> refactor1(List<double> data) {
  List<List<double>> list = reverse(split(data, 32));
  List<List<double>> result =
      List.generate(24 * 4 * 4, (_) => List(32 * 4 * 4));
  for (int i = 0; i < 24; i++) {
    result[i] = polynomialInterpolation(
        polynomialInterpolation(list[i], 4, true), 4, false);
  }
  List<double> temp;
  for (int j = 0; j < 32 * 4 * 4; j++) {
    temp = polynomialInterpolation(
        polynomialInterpolation(
            List()..addAll(result.getRange(0, 24).map((e) => e[j])), 4, true),
        4,
        false);
    for (int i = 0; i < 24 * 4 * 4; i++) {
      result[i][j] = temp[i];
    }
  }
  return result;
}

/// 一维数组拆分为二维数组
List<List<double>> split(List<double> list, int width) {
  int depth = (list.length / width).round();
  return List.generate(depth,
      (column) => List.generate(width, (row) => list[column * width + row]));
}

/// 二维数组横向翻转
List<List<double>> reverse(List<List<double>> list) {
  List<List<double>> result = List();
  for (List<double> subList in list) {
    result.add(subList.reversed.toList());
  }
  return result;
}

/// 三次多项式 + 双线性插值算法
/// [source]为插值前的一行（或一列）一维double数组
/// [times]为插值多项式的项数（项数 = 最高项次数 + 1）
/// [fromStart]是否在首端插2个值（false的话就只插1个，改为后端插2个）
List<double> polynomialInterpolation(
    List<double> source, int times, bool fromStart) {
  if (times < 2 || times > 4) times = 2; // 只支持一次、二次、三次多项式
  int len = source.length;
  int startIndex = fromStart ? 2 : 1; // 跳过首端的一个或两个值
  List<List<double>> originData =
      List.generate(2, (_) => List(times)); // originData[2][times]
  List<double> cores = List(4);
  List<double> result = List(4 * len); // result[4 * len]

  /// 源数据复制到目标数组result
  for (int i = 0; i < len; i++) {
    result[startIndex + i * 4] = source[i];
  }

  /// 主体部分插值
  var temp;
  for (int i = 0; i <= len - times; i++) {
    for (int j = 0; j < times; j++) {
      originData[0][j] = (j * 4).toDouble();
      originData[1][j] = source[i + j];
    }
    cores = getPolyData(originData, times);
    for (int j = 1; j < 4; j++) {
      if (times >= 2) temp = cores[0] + j * cores[1];
      if (times >= 3) temp = temp + j * j * cores[2];
      if (times >= 4) temp = temp + j * j * j * cores[3];
      result[startIndex + i * 4 + j] = temp;
    }
  }

  /// 首端插值，使用线性插值（一次多项式）
  originData[0][0] = 0;
  originData[1][0] = source[0];
  originData[0][1] = 4;
  originData[1][1] = source[1];

  cores = getPolyData(originData, 2);

  if (fromStart) {
    result[1] = cores[0] + (-1) * cores[1];
    result[0] = cores[0] + (-2) * cores[1];
  } else {
    result[0] = cores[0] + (-1) * cores[1];
  }

  /// 末端插值，使用线性插值（一次多项式）
  for (int i = len - times; i < len - 1; i++) {
    // 这里好像和上面在i = len - times时重叠了，暂时不管
    for (int j = 0; j < 2; j++) {
      originData[0][j] = (j * 4).toDouble();
      originData[1][j] = source[i + j];
    }
    cores = getPolyData(originData, 2);
    for (int j = 1; j < 4; j++) {
      result[startIndex + i * 4 + j] = cores[0] + j * cores[1];
    }
  }

  if (fromStart) {
    result[len * 4 - 1] = cores[0] + 5 * cores[1];
  } else {
    result[len * 4 - 2] = cores[0] + 5 * cores[1];
    result[len * 4 - 1] = cores[0] + 6 * cores[1];
  }

  return result;
}

/// 1次多项式：a + bx = y
/// 2次多项式：a + bx + cx ^ 2 = y
/// 3次多项式：a + bx + cx ^ 2 + dx ^ 3 = y
List<double> getPolyData(List<List<double>> originData, int times) {
  double x1, x2, x3, x4;
  double y1, y2, y3, y4;
  List<double> cores = List(4);
  if (times == 2) {
    x1 = originData[0][0];
    x2 = originData[0][1];
    y1 = originData[1][0];
    y2 = originData[1][1];
    cores[1] = (y2 - y1) / x2;
    cores[0] = y1;
  } else if (times == 3) {
    x1 = originData[0][0];
    x2 = originData[0][1];
    x3 = originData[0][2];
    y1 = originData[1][0];
    y2 = originData[1][1];
    y3 = originData[1][2];
    cores[2] =
        ((y3 - y1) * x2 - (y2 - y1) * x3) / (x2 * x3 * x3 - x2 * x2 * x3);
    cores[1] = (y2 - y1) / x2;
    cores[0] = y1;
  } else {
    x1 = originData[0][0];
    x2 = originData[0][1];
    x3 = originData[0][2];
    x4 = originData[0][3];
    y1 = originData[1][0];
    y2 = originData[1][1];
    y3 = originData[1][2];
    y4 = originData[1][3];
    cores[3] = ((y4 - y1) * x2 - (y2 - y1) * x4) / x2 -
        ((y3 - y1) * x2 - (y2 - y1) * x3) /
            (x2 * x3 * x3 - x2 * x2 * x3) *
            (x2 * x4 * x4 - x2 * x2 * x4) /
            x2;
    cores[3] = cores[3] /
        ((x2 * x4 * x4 * x4 - x2 * x2 * x2 * x4) / x2 -
            (x2 * x3 * x3 * x3 - x2 * x2 * x2 * x3) /
                (x2 * x3 * x3 - x2 * x2 * x3) *
                (x2 * x4 * x4 - x2 * x2 * x4) /
                x2);
    cores[2] =
        ((y3 - y1) * x2 - (y2 - y1) * x3) / (x2 * x3 * x3 - x2 * x2 * x3);
    cores[1] = (y2 - y1) / x2;
    cores[0] = y1;
  }
  return cores;
}


List<double> test = [
  14.23,
  14.36,
  14.55,
  15.16,
  14.19,
  15.98,
  14.38,
  15.45,
  16.21,
  15.49,
  15.02,
  15.85,
  15.60,
  15.17,
  15.66,
  15.34,
  15.27,
  15.38,
  15.27,
  15.70,
  15.00,
  15.14,
  14.84,
  15.55,
  15.11,
  15.05,
  15.12,
  15.10,
  14.28,
  14.76,
  15.23,
  14.54,
  14.43,
  14.64,
  14.73,
  14.96,
  15.12,
  14.84,
  14.83,
  15.51,
  15.27,
  14.65,
  16.02,
  16.09,
  15.99,
  15.16,
  15.60,
  15.78,
  15.03,
  15.20,
  15.60,
  16.16,
  14.97,
  15.79,
  15.21,
  15.17,
  14.64,
  15.10,
  14.84,
  15.18,
  14.53,
  14.07,
  15.18,
  13.79,
  14.10,
  14.25,
  14.81,
  15.47,
  15.32,
  15.28,
  15.97,
  15.72,
  16.23,
  15.55,
  14.78,
  16.00,
  15.24,
  15.58,
  15.27,
  15.55,
  15.37,
  15.89,
  15.60,
  15.46,
  14.70,
  15.09,
  14.89,
  15.29,
  14.52,
  15.81,
  15.40,
  15.19,
  15.48,
  13.72,
  14.30,
  15.13,
  15.65,
  14.03,
  15.73,
  16.22,
  15.27,
  15.52,
  16.34,
  16.60,
  15.94,
  15.54,
  15.96,
  15.85,
  15.59,
  15.59,
  15.80,
  15.38,
  16.29,
  15.72,
  15.93,
  15.28,
  15.24,
  15.70,
  15.04,
  15.97,
  15.73,
  14.97,
  16.23,
  15.24,
  14.96,
  14.25,
  14.74,
  14.15,
  14.54,
  14.02,
  14.66,
  15.56,
  14.19,
  15.28,
  15.70,
  16.31,
  15.74,
  15.49,
  16.11,
  15.62,
  15.35,
  15.39,
  15.46,
  15.96,
  15.54,
  15.34,
  16.29,
  15.93,
  15.43,
  15.52,
  15.49,
  15.48,
  15.16,
  14.95,
  15.49,
  15.19,
  14.92,
  14.62,
  15.29,
  14.78,
  15.24,
  15.24,
  15.27,
  15.09,
  15.45,
  16.17,
  16.25,
  15.89,
  16.46,
  15.27,
  15.43,
  15.84,
  15.46,
  15.58,
  15.95,
  15.97,
  15.66,
  15.53,
  15.63,
  15.56,
  15.78,
  15.90,
  15.81,
  15.73,
  15.50,
  15.59,
  15.41,
  15.44,
  15.30,
  15.33,
  15.67,
  15.06,
  15.04,
  14.99,
  15.25,
  15.05,
  14.87,
  14.39,
  15.25,
  15.63,
  15.14,
  16.08,
  15.60,
  16.14,
  15.19,
  14.99,
  16.01,
  16.80,
  16.44,
  15.37,
  15.60,
  16.01,
  15.62,
  16.05,
  15.99,
  15.61,
  15.96,
  16.33,
  17.10,
  16.90,
  17.55,
  16.22,
  17.13,
  17.83,
  15.00,
  14.96,
  14.68,
  15.95,
  15.85,
  15.25,
  15.55,
  15.68,
  15.61,
  15.06,
  15.89,
  15.76,
  15.50,
  15.94,
  15.91,
  15.85,
  15.41,
  15.73,
  15.51,
  15.83,
  16.48,
  15.49,
  15.47,
  16.79,
  16.83,
  18.29,
  19.03,
  20.97,
  19.36,
  20.09,
  20.26,
  20.38,
  14.42,
  15.12,
  15.25,
  14.91,
  15.39,
  14.79,
  15.57,
  16.14,
  15.21,
  15.53,
  15.49,
  15.53,
  16.10,
  15.66,
  15.89,
  16.34,
  15.20,
  16.07,
  15.88,
  15.82,
  15.94,
  15.63,
  18.21,
  18.11,
  22.48,
  22.02,
  23.86,
  23.93,
  22.12,
  21.82,
  21.51,
  20.66,
  15.51,
  14.86,
  14.91,
  15.14,
  15.72,
  15.81,
  16.24,
  15.93,
  15.33,
  15.89,
  16.73,
  16.27,
  16.18,
  15.63,
  16.34,
  15.97,
  15.69,
  16.20,
  16.15,
  16.00,
  15.29,
  16.55,
  19.02,
  21.42,
  22.53,
  23.42,
  23.90,
  23.72,
  22.42,
  20.97,
  22.23,
  21.30,
  14.76,
  13.98,
  15.02,
  15.89,
  15.24,
  16.08,
  15.66,
  15.31,
  16.33,
  15.66,
  15.37,
  15.91,
  15.70,
  16.27,
  16.10,
  15.84,
  15.94,
  15.40,
  16.65,
  16.19,
  18.55,
  18.27,
  22.10,
  22.17,
  24.08,
  23.49,
  23.80,
  23.90,
  22.71,
  22.02,
  22.60,
  22.24,
  15.08,
  14.85,
  15.77,
  15.20,
  15.93,
  15.01,
  16.12,
  16.31,
  15.83,
  15.84,
  15.84,
  15.90,
  16.16,
  15.87,
  16.36,
  15.85,
  15.85,
  15.38,
  16.17,
  16.55,
  17.89,
  20.90,
  22.14,
  23.59,
  23.95,
  23.04,
  23.49,
  23.49,
  22.39,
  21.58,
  21.34,
  21.73,
  14.98,
  14.87,
  14.81,
  15.34,
  15.63,
  15.90,
  15.44,
  16.19,
  16.06,
  15.41,
  16.18,
  16.04,
  16.63,
  16.67,
  15.60,
  16.19,
  15.98,
  16.66,
  16.66,
  18.05,
  21.52,
  22.35,
  24.54,
  23.40,
  23.52,
  23.29,
  23.22,
  23.54,
  21.48,
  21.40,
  21.71,
  21.53,
  15.79,
  14.78,
  16.18,
  15.49,
  15.71,
  15.83,
  16.11,
  15.93,
  15.19,
  15.93,
  16.61,
  16.19,
  16.51,
  15.50,
  15.29,
  16.37,
  16.25,
  16.43,
  17.09,
  19.64,
  22.47,
  22.27,
  24.05,
  23.70,
  23.92,
  23.22,
  24.02,
  22.72,
  21.58,
  21.33,
  21.81,
  20.60,
  15.07,
  14.56,
  15.40,
  16.70,
  15.57,
  15.16,
  16.39,
  15.81,
  16.29,
  16.45,
  15.79,
  15.86,
  16.32,
  15.86,
  16.25,
  16.20,
  15.80,
  15.96,
  20.10,
  20.54,
  22.93,
  23.03,
  23.33,
  23.41,
  22.96,
  23.27,
  22.69,
  22.96,
  19.59,
  20.14,
  19.44,
  19.69,
  15.37,
  15.61,
  15.91,
  15.48,
  15.87,
  15.71,
  15.63,
  16.15,
  15.96,
  16.17,
  16.02,
  16.20,
  16.22,
  15.79,
  15.55,
  15.98,
  15.87,
  16.61,
  19.79,
  22.28,
  22.81,
  23.31,
  22.82,
  23.37,
  23.22,
  23.40,
  23.34,
  21.16,
  19.48,
  20.05,
  20.43,
  23.72,
  14.93,
  15.33,
  15.69,
  15.69,
  16.53,
  15.29,
  15.85,
  15.93,
  15.60,
  15.40,
  15.81,
  16.14,
  15.62,
  15.93,
  15.22,
  16.26,
  16.04,
  16.21,
  21.49,
  21.23,
  22.54,
  22.32,
  23.31,
  23.26,
  22.60,
  22.37,
  20.45,
  20.17,
  23.74,
  24.12,
  27.22,
  27.96,
  14.97,
  14.47,
  15.05,
  15.80,
  15.51,
  15.80,
  16.51,
  16.07,
  16.24,
  15.71,
  16.24,
  16.47,
  15.88,
  16.43,
  15.85,
  16.59,
  16.30,
  16.87,
  20.64,
  21.37,
  21.90,
  22.61,
  23.89,
  24.49,
  23.25,
  23.06,
  21.34,
  21.11,
  23.63,
  24.68,
  26.25,
  27.28,
  14.67,
  14.88,
  15.67,
  15.49,
  16.08,
  15.35,
  15.90,
  15.38,
  16.43,
  15.63,
  15.88,
  15.66,
  15.69,
  16.43,
  16.42,
  16.21,
  16.14,
  15.96,
  21.29,
  21.58,
  24.15,
  23.78,
  25.48,
  26.01,
  23.75,
  23.35,
  22.27,
  22.43,
  24.61,
  24.67,
  24.69,
  25.57,
  15.52,
  15.69,
  15.21,
  14.83,
  15.89,
  16.07,
  16.35,
  16.92,
  16.26,
  16.09,
  16.12,
  16.19,
  16.34,
  15.75,
  17.23,
  15.95,
  16.76,
  17.36,
  20.04,
  24.06,
  24.06,
  24.74,
  24.81,
  25.43,
  24.20,
  22.50,
  22.34,
  23.20,
  23.44,
  24.80,
  24.10,
  24.82,
  14.53,
  14.62,
  16.29,
  15.66,
  15.58,
  15.77,
  15.83,
  16.17,
  16.32,
  15.85,
  16.32,
  16.52,
  15.72,
  16.12,
  16.64,
  16.27,
  16.92,
  16.94,
  22.55,
  23.98,
  26.43,
  27.20,
  26.22,
  26.22,
  23.09,
  22.41,
  23.12,
  23.89,
  24.35,
  24.09,
  24.10,
  24.52,
  15.67,
  14.68,
  15.59,
  16.71,
  15.34,
  15.56,
  15.64,
  16.45,
  15.96,
  16.09,
  16.14,
  15.58,
  16.14,
  16.17,
  16.49,
  16.93,
  16.37,
  18.16,
  22.22,
  23.54,
  25.97,
  27.53,
  26.83,
  24.64,
  23.56,
  22.95,
  22.74,
  24.72,
  23.78,
  23.98,
  23.47,
  23.96,
  14.22,
  14.14,
  15.70,
  15.11,
  15.93,
  15.57,
  15.67,
  16.53,
  14.79,
  15.26,
  15.59,
  16.18,
  15.65,
  16.44,
  15.39,
  16.38,
  16.31,
  16.87,
  21.59,
  21.77,
  26.86,
  28.36,
  24.86,
  25.92,
  23.94,
  22.43,
  24.35,
  24.55,
  24.95,
  24.92,
  25.22,
  24.74,
  15.01,
  15.43,
  15.39,
  15.59,
  15.42,
  15.31,
  16.53,
  16.72,
  15.42,
  15.91,
  15.94,
  15.96,
  15.61,
  15.63,
  15.33,
  16.56,
  16.47,
  16.88,
  19.78,
  22.63,
  25.15,
  25.96,
  27.29,
  25.58,
  23.36,
  22.27,
  23.46,
  24.96,
  24.05,
  24.77,
  25.03,
  24.87
];